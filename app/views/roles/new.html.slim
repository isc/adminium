.page-header: h3== @role.new_record? ? 'New role' : "Edit role <i>#{h @role.name}</i>"
= simple_form_for @role, html: {class: 'form-vertical edit_role'} do |f|
  .row
    .col-md-6
      = f.input :name
      hr
      table.table.table-condensed.table-striped
        thead
          th colspan="2" Table name
          - %w(create read update delete).each do |action|
            th
              = check_box_tag "#{action}_all"
              label< for="#{action}_all"= action.capitalize
        tbody
          - @generic.tables.each do |table|
            tr
              td= check_box_tag 'all_actions', nil, nil, id: "all_actions_#{table}"
              td
                label for="all_actions_#{table}"= table.to_s.humanize
              - %w(create read update delete).each do |action|
                td= check_box_tag "role[permissions][#{table}][#{action}]", '1', @role.permissions[table.to_s].try(:[], action)
    .col-md-6
      - non_admin_collaborators = current_account.collaborators.where(is_administrator: false).order(:email)
      - if non_admin_collaborators.present?
        = f.association :collaborators, as: :check_boxes, collection: non_admin_collaborators.map {|collaborator|[collaborator.name, collaborator.id]}
      - else
        .form-group
          label.control-label Collaborators
        .alert.alert-warning
          - if current_account.collaborators.empty?
            p A role should be assigned to collaborators but you have not invited any yet.
          - else
            p Your collaborators are administrators of this account, thus they have all permissions on all tables and cannot be assigned a role.
          = link_to "Add a collaborator", collaborators_path, class: 'btn btn-primary'

  .form-group= f.submit class: 'btn btn-primary', data: {disable_with: 'Sending...'}
