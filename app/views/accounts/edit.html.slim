.page-header
  h3
    'Edit account
    br
    small= " #{@account.plan.humanize} plan"
  - if @account.pet_project?
    p.alert
      ' You are currently on the free plan meant for pet projects which is limited to the 5 first tables of your schema.
      br
      = link_to 'Upgrade', current_account.upgrade_link, class: 'btn btn-warning'
      '  to the startup plan ($10 per month) to access your full schema with Adminium.
= tabs do |tabs|
  - tabs.pane 'Database connection', active: true do
    = simple_form_for @account, html: {class: 'form-horizontal'} do |f|
      - if @account.errors.any?
        .row
          .alert.alert-block.alert-error.span8
            h4.alert-heading
              = pluralize @account.errors.count, 'error'
              = " prohibited this #{@account.class.name.humanize} from being saved:"
            ul
              - @account.errors.full_messages.each do |msg|
                li= msg
      - if @account.id == ENV['DEMO_ACCOUNT_ID']
        .control-group
          label.control-label.optional Database url
          .controls
            input disabled="disabled" value="NOT EDITABLE IN THE DEMO"
            p.help-block This is were you will set your own database connection string, encrypted and securely stored.
      - else
        = f.input :db_url, required: true, input_html: {title: 'Only MySQL and PostgreSQL are supported for now. Thus your db url has to be of the form postgres://user:pass@host/database or mysql://user:pass@host/database', class: 'span8'}
      = f.input :application_time_zone, input_html: {class: 'timezone_select2'}
      = f.input :database_time_zone, input_html: {class: 'timezone_select2'}
      .form-actions= f.button :submit, class: 'btn-primary'
  - tabs.pane 'Collaborators' do
    - if @account.enterprise?
      .alert
        p You can use a Google account to log in to this account and authorize collaborators to log in as well.
        = simple_form_for @account.collaborators.build(kind: 'google_oauth2'), remote: true, html: {class: 'form-horizontal'} do |f|
          = f.input :email, placeholder: 'Google account email', type: 'email', required: true
          = f.input :is_administrator, as: :radio_buttons
          = f.input :kind, as: :hidden
          .control-group
            'or has the following roles
            = link_to '(create a new role)', new_role_path
          - if current_account.roles.present?
            = f.association :roles, as: :check_boxes, collection: current_account.roles.map {|role|[role.name, role.id]}, html: {class: "span1"}
          = f.submit 'Add a collaborator', class: 'btn btn-primary', data: {disable_with: 'Sending...'}
    - else
      = upgrade_to_enterprise_notice current_account
    - if @account.collaborators.present? || @collaborators.present?
      .row
        table.table.span6#collaborators data-delete-url="#{collaborator_path(':id')}"
          thead
            tr
              th
              th
              th Roles
              th
          - @heroku_collaborators.each do |collaborator|
            tr
              td= image_tag "logos/heroku-icon.png", alt: "Heroku Collaborator"
              td= collaborator['email']
              td
                ' administrator
                = "(#{collaborator["role"]})" if collaborator['role']
              td
                = link_to content_tag(:i, nil, class: 'fa fa-pencil'), new_collaborator_path(email: collaborator['email']), remote: true,  'data-toggle' => 'modal', 'data-target' => "#modal-window", 'data-backdrop' => true, 'data-keyboard' => true, class: 'btn', title: 'Edit this collaborator roles', rel: 'tooltip' if collaborator['role'] != 'owner'
          - @account.collaborators.each do |collaborator|
            - next if collaborator.new_record?
            - css = collaborator.user_id ? nil : 'deactivated'
      
            tr class=css
              td= image_tag "logos/#{collaborator.kind}-icon.png", alt: "#{collaborator.kind.capitalize} Collaborator"
              td= collaborator.name
              td= collaborator.human_roles
              td
                = link_to content_tag(:i, nil, class: 'fa fa-pencil'), edit_collaborator_path(collaborator), remote: true,  'data-toggle' => 'modal', 'data-target' => "#modal-window", 'data-backdrop' => true, 'data-keyboard' => true, class: 'btn', title: 'Edit this collaborator roles', rel: 'tooltip'
                = link_to content_tag(:i, nil, class: 'fa fa-trash'), collaborator, method: :delete, remote: true, class: 'btn trash_collaborator', title: 'remove every access of this collaborator'
      
  - tabs.pane 'Roles and permissions' do
    = render 'roles'
  - tabs.pane 'Display settings' do
    = render 'display_settings'