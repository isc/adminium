- g = rand(1000)
td.grouping_kind
  select.form-control.input-sm name="filters[#{g}][grouping]"
    = options_for_select([['and', 'and'],['or', 'or']], filter['grouping'] || 'and')
td
  input type="hidden" name="filters[#{g}][column]" value=filter['column']
  input type="hidden" name="filters[#{g}][type]" value=filter['type']
  input type="hidden" name="filters[#{g}][assoc]" value=filter['assoc']
  label.control-label= "#{[filter['assoc'], filter['column']].map(&:presence).compact.map(&:to_s).map(&:humanize).join(' > ')}".strip
td.operators
  - filter_type = filter['type'].to_s
  - filter_type = 'integer' if %w(decimal float).include? filter_type
  - filter_type = 'date' if %w(date datetime).include? filter_type
  - filter_type = 'string' if %w(text uuid).include? filter_type
  - filter_type = 'array' if filter_type.ends_with? '_array'
  - if lookup_context.exists?("settings/filters/_#{filter_type}")
    = render "/settings/filters/#{filter_type}", g: g, operator: filter['operator']
  - else
    select.form-control name="filters[#{g}][operator]"
      = options_for_select((UNARY_OPERATORS).map {|o| [o.humanize.downcase,o]}, filter['operator'])
td
  - options = {class: 'operand form-control'}
  - options['data-type'] = filter_type
  - options['data-original-type'] = filter['type'].to_s
  = text_field_tag "filters[#{g}][operand]", filter['operand'], options
td
  span.btn.btn-default
    i.fa.fa-trash
