- page_count = scope.try(:page_count)
.btn-group
  - if @current_page > 1
    = link_to url_for(whitelisted_params.merge(page: (@current_page - 1))), rel: 'tooltip', title: 'Previous page', data: {placement: 'bottom'}, class: 'btn btn-default'
      i.fa.fa-arrow-left

  - if (!page_count && @fetched_items.any?) || (page_count&.nonzero? && (@current_page < scope.page_count))
    = link_to url_for(whitelisted_params.merge(page: (@current_page + 1))), rel: 'tooltip', title: 'Next page', data: {placement: 'bottom'}, class: 'btn btn-default'
      i.fa.fa-arrow-right

- if page_count.nil? || page_count.nonzero?
  - warning_class = 'btn-danger' if page_count && @current_page > page_count
  .btn-group<
    = link_to "#", class: "btn btn-default dropdown-toggle #{warning_class}", data: {toggle: 'dropdown'} do
      - if page_count
        == page_entries_info(scope, entry_name: 'record')
      - else
        == page_entries_info_no_record_count @fetched_items, @current_page, @page_size
      span.caret<
    ul.dropdown-menu
      - if @current_page > 1
        li
          = link_to "Go to first page", whitelisted_params.merge(page: 1)
      - if page_count
        - ((@current_page - 3)..(@current_page + 3)).each do |page|
          - if page > 1 && page <= page_count && page != @current_page && (page + 1) != @current_page && (page - 1) != @current_page
            li
              = link_to "Go to page #{page}", whitelisted_params.merge(page: page)
        - if @current_page != page_count
          li
            = link_to "Go to last page (page #{page_count})", params.merge(page: (page_count))
          li.divider
      li.dropdown-header Rows per page
      - ([25, 50, 100, 200] + [resource.per_page.to_i]).uniq.sort.each do |per_page|
        li(class="#{'active' if resource.per_page == per_page}")
          = link_to per_page, whitelisted_params.merge(per_page: per_page)
