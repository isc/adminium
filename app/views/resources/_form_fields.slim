- resource.columns(:form).each do |name|
  .form-group
    label.control-label.col-sm-4 for="#{resource.table}_#{name}"
      - if required_constraints && resource.required_column?(name)
        abbr> title="required" *
      = resource.column_display_name name
    .col-sm-8.controls
      - if (assoc_info = resource.foreign_key?(name)) && !assoc_info[:polymorphic]
        - foreign_resource = resource_for assoc_info[:referenced_table]
        - count = foreign_resource.count_with_timeout
        - if count && count <= 25
          = belongs_to_select_tag item, foreign_resource, assoc_info
        - else
          = render 'foreign_resource_input', value: item[name], foreign_resource: foreign_resource, assoc: assoc_info
      - elsif assoc_info = resource.foreign_key_array?(name)
        - foreign_resource = resource_for assoc_info[:referenced_table]
        = render 'foreign_resource_input', value: item[name], foreign_resource: foreign_resource, assoc: assoc_info
      - elsif resource.column_type(name) == :hstore
        .hstore-edition
          = render 'hstore_row', table: resource.table, name: name, key: '_', value: nil, hidden: true
          - (item[name] || {'' => ''}).each do |key, value|
            = render 'hstore_row', table: resource.table, name: name, key: key, value: value, hidden: false
          .hstore-new-row
            .form-group
              .col-xs-1.col-xs-offset-11
                a.btn.btn-xs.btn-info title="Add a new key / value pair" +
      - else
        = input resource, item, name, required_constraints
