- resource.columns[:form].each do |name|
  .form-group
    label.control-label.col-sm-4 for="#{resource.table}_#{name}"
      - if required_constraints && resource.required_column?(name)
        abbr title="required" *
        ' 
      = resource.column_display_name name
    .col-sm-8
      - if (assoc_info = resource.foreign_key?(name)) && !assoc_info[:polymorphic]
        - foreign_resource = resource_for assoc_info[:referenced_table]
        - if foreign_resource.query.count <= 25
          = belongs_to_select_tag resource, item, foreign_resource, name
        - else
          = render 'foreign_resource_input', value: item[name], name: name, foreign_resource: foreign_resource
      - elsif referenced_table = (resource.foreign_key_array? name)
        - foreign_resource = resource_for referenced_table
        = render 'foreign_resource_input', value: item[name], name: name, foreign_resource: foreign_resource
      - elsif resource.column_type(name) == :hstore
        - (item[name] || {'' => ''}).each do |key, value|
          .hstore-row
            .form-group
              .col-xs-5
                input.form-control name="#{resource.table}[#{name}][]" value=key
              .col-xs-6
                input.form-control name="#{resource.table}[#{name}][]" value=value
              .col-xs-1
                a.btn.btn-xs.btn-danger title="Remove this key / value pair" &times;
        .hstore-new-row
          .form-group
            .col-xs-1.col-xs-offset-11
              a.btn.btn-xs.btn-info title="Add a new key / value pair" +
      - else
        = input resource, item, name, required_constraints
