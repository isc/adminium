javascript:
  columns_hash = #{resource.schema_hash.to_json.html_safe}
  adminium_column_options = #{resource.adminium_column_options.to_json.html_safe}

- content_for :subnav do
  header.jumbotron.subhead
    .breadcrumb
      .row-fluid.btn-toolbar
        .span3
          strong= link_to params[:table].humanize, resources_path(params[:table])
          span.divider >
          = "#{resource.human_name} ##{params[:id]}"
        .btn-group.span8
          - if user_can? 'create', params[:table]
            = link_to new_resource_path(table:params[:table]), class: "btn create", rel: "tooltip", title: "Create a new row", "data-placement" => "bottom" do
              i.icon-file
            = link_to new_resource_path(table:params[:table], clone_id: params[:id]), class: "btn create", rel: "tooltip", title: "Clone", "data-placement" => "bottom" do
              i.icon-copy
          - if user_can? 'edit', params[:table]
            = link_to content_tag(:i, nil, class: 'icon-pencil'), edit_resource_path(resource.table, params[:id]), title: 'Edit', rel: 'tooltip', :'data-placement' => "bottom", class: 'btn'
          - if user_can? 'destroy', params[:table]
            = link_to content_tag(:i, nil, class: 'icon-trash'), resource_path(resource.table, params[:id], redirect: 'index'), method: :delete, data: {confirm: t('items.destroy_warning')}, class: 'btn', title: 'Destroy', rel: 'tooltip', 'data-placement' => 'bottom'
        .span1.pull-right
          a.btn data-toggle="modal" href="#settings" title="Show Settings" data-placement="bottom" rel="tooltip"
            i.icon-cog

.row-fluid.item-attributes data-table=params[:table] data-item-id=params[:id]
  .span7
    - [[:string, :string_array], [:integer, :float, :decimal]].each do |types|
      - columns = item_attributes_type types, resource
      - if columns.present?
        table.table.table-condensed
          - columns.each do |name|
            tr
              th.span3 title=name
                i.column_settings.icon-cog
                = resource.column_display_name name
              == display_attribute :td, @item, name, resource
    - columns = item_attributes_type([:text], resource)
    - if columns.present?
      table.table.table-condensed.type_text
        - columns.each do |name|
          tr
            th title=name
              i.column_settings.icon-cog
              = resource.column_display_name name
          tr
            == display_attribute :td, @item, name, resource
  .span5
    table.table.table-condensed
      - primary_keys_and_time_fields_for_show(resource).each do |name|
        tr
          th.span3 title=name
            i.column_settings.icon-cog
            = resource.column_display_name name
          == display_attribute :td, @item, name, resource
    - columns = item_attributes_type([:boolean], resource)
    - if columns.present?
      table.table.table-condensed
        - columns.each do |name|
          tr
            th.span3 title=name
              i.column_settings.icon-cog
              = resource.column_display_name name
            == display_attribute :td, @item, name, resource

    - if resource.associations[:belongs_to].any?
      table.table.table-condensed
        - resource.associations[:belongs_to].each do |name, assoc|
          tr
            th title="Belongs to" = name.to_s.humanize.singularize
            - foreign_key_value = @item[assoc[:foreign_key]]
            - if foreign_key_value
              td= display_belongs_to @item, assoc[:foreign_key], foreign_key_value, resource
            - else
              td.nilclass null

    - if resource.associations[:has_many].any?
      table.table.table-condensed
        - resource.associations[:has_many].each do |name, assoc|
          tr
            - count, assoc_params = (resource.has_many_count @item, name), {assoc[:foreign_key] => @item[assoc[:primary_key]]}
            th.span2= name.to_s.humanize
            td
              = link_to resources_path(name, where: assoc_params) do
                span.badge.badge-warning = count
            td
              == display_associated_items resource, @item, name
              - if count > 5
                '  
                = link_to "...", resources_path(name, where: assoc_params)
            td
              = link_to new_resource_path(name, attributes: assoc_params), class: 'btn btn-mini', rel: "tooltip", :"data-placement" => :left,  title: "Create a new associated #{name.to_s.singularize.humanize}" do
                i.icon-plus

= render 'resources/panels/show_settings'
#column-settings.modal.hide.fade data-remote-path=column_setting_path('{table}', column: '{column}', view: '{view}')