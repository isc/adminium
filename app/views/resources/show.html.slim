- content_for :subnav do
  header.jumbotron.subhead
    ul.breadcrumb
      li
        = link_to params[:table].humanize, resources_path(params[:table])
        span.divider >
      li
        = "#{@item.class.original_name} ##{@item[@item.class.primary_key]}"
      - if user_can? 'edit', params[:table]
        span.divider |
        li= link_to 'Edit', edit_resource_path(@item.class.table_name, @item)
      li.pull-right
        a data-toggle="modal" href="#settings" Settings
.row-fluid
  .span6
    dl
      - @item.class.settings.columns[:show].each do |name|
        dt= name.humanize
        == display_attribute :dd, @item, name
  .span6
    dl
      - @item.reflections.each do |name, assoc|
        dt= assoc.macro.to_s.humanize
        - if assoc.belongs_to?
          - foreign_key_value = @item[assoc.foreign_key]
          - if foreign_key_value
            dd= display_belongs_to @item, assoc.foreign_key, foreign_key_value
          - else
            dd.nilclass null
        - else
          - count = @item.send(name).count
          dd
            = link_to "#{name}", resources_path(name, where: {assoc.foreign_key => @item[@item.class.primary_key]})
            '
            span.badge.badge-info = count

= render 'resources/panels/show_settings'
