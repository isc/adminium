javascript:
  columns_hash = #{resource.schema_hash.to_json.html_safe}
  adminium_column_options = #{resource.adminium_column_options.to_json.html_safe}

nav.navbar.navbar-default
  .container-fluid
    .navbar-header
      = navbar_toggle 'subnavbar'
      a.navbar-brand= params[:table].humanize
    #subnavbar.collapse.navbar-collapse
      ul.nav.navbar-nav
        li
          = link_to schema_path(params[:table]), rel: 'tooltip', title: 'Schema', data: {placement: 'bottom'} do
            i.fa.fa-table<
      - if resource.columns[:search].any?
        form.navbar-form.navbar-left
          - request.query_string.to_s.split('&').each do |param|
            - name, value = unescape_name_value_pair param
            - next if name == 'search'
            input type="hidden" name=name value=value
          .input-group
            input.form-control#search_input> name="search" type='text' value=params[:search] placeholder="search on #{resource.columns[:search].map{|e|e.to_s.humanize}.join(', ').downcase}"
            .input-group-btn
              button.btn.btn-default>
                i.fa.fa-search
          a.btn.btn-default< rel="tooltip" title="Advanced search" data-placement="bottom" data-toggle="modal" href="#advanced_search"
            i.fa.fa-search-plus
        .btn-group
          - if user_can? 'create', params[:table]
            = icon_button_link new_resource_path(table:params[:table]), 'plus', 'Create a new row'
          - if user_can? 'edit', params[:table]
            = icon_button_link '#', 'pencil', 'Edit selected rows', disabled: 'disabled', class: 'bulk-edit'
          - if user_can? 'destroy', params[:table]
            = icon_button_link '#', 'trash', 'Delete selected rows', disabled: 'disabled', class: 'bulk-destroy'
          = icon_button_link '#export', 'download', 'Export rows', data: {toggle: 'modal'}
          - if user_can? 'create', params[:table]
            = icon_button_link import_resources_path(table: params[:table]), 'upload', 'Import rows'
      .navbar-right
        = render 'next_previous_page', scope: @items
        = settings_button 'Listing settings'

#nav_searches
  = form_for Widget.new, remote: true do |t|
    = t.hidden_field :type, value: 'TableWidget'
    = t.hidden_field :table, value: params[:table]
    = t.hidden_field :advanced_search, value: params[:asearch] if params[:asearch].present?

  ul.nav.nav-pills
    - if params[:asearch].blank?
      li.active
        a
          span All
          - if @widget
            i.icon-star.active title="This view is on your dashboard" rel="tooltip" data-placement="bottom"
          - else
            i.icon-star.add_widget title="Add to your dashboard" rel="tooltip" data-placement="bottom" data-form="#nav_searches form"
    - else
      li= link_to 'All', params.merge(asearch: nil)
    - resource.filters.keys.each do |key|
      - if params[:asearch] == key
        li.active
          a
            span.text-more data-placement="right" data-title=key data-content=display_filter(@current_filter) = key
            - if @widget
              i.icon-star.active title="This view is on your dashboard" rel="tooltip" data-placement="bottom"
            - else
              i.icon-star.add_widget title="Add to your dashboard" rel="tooltip" data-placement="bottom" data-form="#nav_searches form"
            i.icon-pencil data-toggle="modal" href="#advanced_search"  title="Edit this view" rel="tooltip" data-placement="bottom"
            = link_to search_path(params[:table], name: params[:asearch]), method: 'delete' do
              i.icon-trash title="Delete this view" rel="tooltip" data-placement="bottom"

      - else
        li= link_to key, params.merge(asearch: key)
    li.add_view
      a data-toggle="modal" href="#advanced_search" title="#{resource.filters.keys.length > 0 ? 'Add another view' : 'Create a custom view'}" rel="tooltip" data-placement="bottom"
        i.fa.fa-plus-circle

- if params[:search].present? || params[:where]
  - if params[:search].present?
    span.label.label-success
      == "Search for <i>#{params[:search]}</i>"
      span.btn.btn-mini data-param-kind="search"
        i.fa.fa-times
  - if params[:where]
    - params[:where].each do |k, v|
      span.label.label-warning
        - if resource.is_date_column? k.to_sym
          == "Where #{k} is in <i>#{format_date(v).first}</i>"
        - else
          == "Where #{k} is <i>#{v}</i>"
        span.btn.btn-mini data-param=format_param_for_removal(k, v) x
  hr
.content
  = render 'items', items: @fetched_items, actions_cell: true
= render '/resources/panels/listing_settings'
= render '/resources/panels/export'
= render '/resources/panels/advanced_search'
#column-settings.modal.fade data-remote-path=column_setting_path('{table}', column: '{column}', view: '{view}')
#time-chart.modal.fade data-remote-path=generate_chart_path
#bulk-edit-modal.modal.fade data-remote-path=bulk_edit_resources_path(table: params[:table])
= form_tag bulk_destroy_resources_path(params[:table]), id: 'bulk-destroy-form'
