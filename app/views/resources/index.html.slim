javascript:
  columns_hash = #{resource.schema_hash.to_json.html_safe}
  adminium_column_options = #{resource.adminium_column_options.to_json.html_safe}

nav.navbar.navbar-default
  .container-fluid
    .navbar-header
      = navbar_toggle 'subnavbar'
      a.navbar-brand= params[:table].humanize
    #subnavbar.collapse.navbar-collapse
      ul.nav.navbar-nav
        li
          = link_to schema_path(params[:table]), rel: 'tooltip', title: 'Schema', data: {placement: 'bottom'} do
            i.fa.fa-table<
        li.dropdown
          a.dropdown-toggle href="#" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"
            span.text-more data-content=display_search(@current_search) = params[:asearch].presence || 'All records'
            span.caret<
          ul.dropdown-menu
            - if params[:asearch].blank?
              li
                a data-toggle="modal" href="#advanced_search" New filter
              li.divider role="separator"
            - if params[:asearch].present? || @searches.any?
              li.dropdown-header Filters
            - if params[:asearch].present?
              li= link_to 'All records', whitelisted_params.merge(asearch: nil)
            - @searches.each do |search|
              - next if params[:asearch] == search.name
              li= link_to search.name, whitelisted_params.merge(asearch: search.name)
            - if @searches.any?
              li.divider role="separator"
            li.dropdown-header Current filter
            - if @widget
              li= link_to 'Remove from dashboard', widget_path(@widget), method: :delete
            - else
              li= link_to 'Add to dashboard', widgets_path(widget: {type: 'TableWidget', table: params[:table], advanced_search: params[:asearch]}), method: :post
            - if params[:asearch].present?
              li
                a data-toggle="modal" href="#advanced_search" Edit
              li
                = link_to 'Delete', search_path(params[:table], name: params[:asearch]), method: 'delete'
      - if resource.columns(:search).any?
        form.navbar-form.navbar-left
          - request.query_string.to_s.split('&').find_all(&:present?).each do |param|
            - name, value = unescape_name_value_pair param
            - next if name == 'search'
            input type="hidden" name=name value=value
          .input-group
            input.form-control#search_input> name="search" type='text' value=params[:search] placeholder="search on #{resource.columns(:search).map {|e|e.to_s.humanize}.join(', ').downcase}"
            .input-group-btn
              button.btn.btn-default>
                i.fa.fa-search
      .btn-group
        - if user_can? 'create', params[:table]
          = icon_button_link new_resource_path(table:params[:table]), 'plus', 'Create a new row', class: 'create-action'
        - if user_can? 'edit', params[:table]
          = icon_button_link '#', 'pencil', 'Edit selected rows', disabled: 'disabled', class: 'bulk-edit'
        - if user_can? 'destroy', params[:table]
          = icon_button_link '#', 'trash', 'Delete selected rows', disabled: 'disabled', class: 'bulk-destroy'
        = icon_button_link '#export', 'download', 'Export rows', data: {toggle: 'modal'}
        - if user_can? 'create', params[:table]
          = icon_button_link import_resources_path(table: params[:table]), 'upload', 'Import rows'
      .navbar-right
        => render 'next_previous_page', scope: @items
        = settings_button 'Listing settings'

- if params[:search].present? || params[:where] || params[:exclude]
  .row
    - if params[:search].present?
      .col-md-3
        .alert.alert-info.alert-dismissible
          == "Search for <i>#{h params[:search]}</i>"
          = link_to whitelisted_params.except(:search), class: 'close' do
            i.fa.fa-times
    - %i(where exclude).each do |filter|
      - if params[filter]
        - params[filter].each do |k, v|
          .col-md-3
            .alert.alert-warning.alert-dismissible
              - excluded = '<u>not</u>' if filter == :exclude
              - if resource.date_column? k.to_sym
                == "Where <i>#{grouping} #{k}</i> is #{excluded} <b>#{format_date(v).first}</b>"
              - else
                == "Where <i>#{k}</i> is #{excluded} <b>#{h v}</b>"
              = link_to params_without_filter(k, filter), class: 'close' do
                i.fa.fa-times
.content= render 'items', items: @fetched_items, actions_cell: true
= render '/resources/panels/listing_settings'
= render '/resources/panels/export'
= render '/resources/panels/advanced_search'
#column-settings.modal tabindex="-1"
#time-chart.modal tabindex="-1"
#bulk-edit-modal.modal tabindex="-1" data-remote-path=bulk_edit_resources_path(table: params[:table])
= form_tag bulk_destroy_resources_path(params[:table]), id: 'bulk-destroy-form'
